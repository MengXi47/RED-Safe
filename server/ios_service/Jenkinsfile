pipeline {
    agent any

    environment {
        SERVICE_DIR     = 'server/ios_service'
        IMAGE_NAME      = 'ios-service:latest'
        CONTAINER_NAME  = 'ios-service'
        DOCKERFILE_PATH = 'dockerfile'
    }

    options {
        timestamps()
    }

    stages {
        stage('Preparation') {
            steps {
                script {
                    env.SERVICE_DIR = fileExists('server/ios_service/pom.xml') ? 'server/ios_service' : 'ios_service'
                }
            }
        }

        stage('Unit Tests') {
            steps {
                dir(env.SERVICE_DIR) {
                    sh 'chmod +x mvnw'
                    sh './mvnw -B clean verify'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir(env.SERVICE_DIR) {
                    sh "docker build --pull -t ${IMAGE_NAME} -f ${DOCKERFILE_PATH} ."
                }
            }
        }

        stage('Deploy') {
            steps {
                dir(env.SERVICE_DIR) {
                    sh "docker container rm -f ${CONTAINER_NAME} || true"
                    sh "docker run -d --name ${CONTAINER_NAME} --network host --restart unless-stopped ${IMAGE_NAME}"
                }
            }
        }
    }
}
