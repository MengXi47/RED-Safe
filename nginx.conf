worker_processes  auto;
error_log  /home/boen/nginxx/error.log  warn;    # 日誌路徑

events {
    worker_connections  10000;    # 提高最大連線數
    multi_accept        on;       # 一次 accept 多個連線
    use                 kqueue;   # macOS 使用 kqueue 處理 I/O 事件
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /home/boen/nginxx/access.log  main;

    sendfile        on;
    tcp_nopush      on;     # 優化大檔案傳送
    tcp_nodelay     on;     # 優化小封包傳送

    keepalive_timeout  65;  # 與 client 保持連線的閒置超時

    # SSL 全域優化
    ssl_protocols      TLSv1.3;
    ssl_prefer_server_ciphers  on;

    # 定義內部 upstream
    upstream api_backend {
        server 127.0.0.1:30678;
        keepalive 64;
        keepalive_timeout 65s;  # upstream 保活設定
    }

    # HTTPS 伺服器
    server {
        listen       443 ssl http2;
        server_name  api.server.com;  # 主機名稱

        # 憑證與私鑰
        ssl_certificate      /home/boen/RED-Safe/server.crt;
        ssl_certificate_key  /home/boen/RED-Safe/server.key;

        ssl_session_cache    shared:SSL:10m;
        ssl_session_timeout  10m;
        ssl_ciphers          HIGH:!aNULL:!MD5;

         # HTTP/2 進階設定
        http2_max_concurrent_streams 128;

        location / {
            proxy_pass         http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-Proto https;
            proxy_set_header   Connection        keep-alive;

            proxy_buffering    on;
            proxy_buffers      8 16k;      # 緩衝區數量與大小
            proxy_buffer_size  16k;        # 單個緩衝區大小
            keepalive_requests 100;       # 每連線最多允許請求數
        }
    }

    # HTTP → HTTPS 301 重導
    server {
        listen      80;
        server_name api.server.com;  # 與 HTTPS 同步
        return 301  https://$host$request_uri;
    }
}